name: Deploy with Terraform

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Import existing ECR Repository
        run: |
          terraform import aws_ecr_repository.strapi strapi-app || echo "ECR repo already managed"
        working-directory: terraform

      - name: Import existing Log Group
        run: |
          terraform import aws_cloudwatch_log_group.ecs_strapi /ecs/strapi || echo "Log group already managed"
        working-directory: terraform

      - name: Import existing IAM Role
        run: |
          terraform import aws_iam_role.ecs_task_execution ecsTaskExecutionRole || echo "IAM Role already managed"
        working-directory: terraform

      - name: Import existing ECS Cluster
        run: |
          terraform import aws_ecs_cluster.strapi strapi-cluster || echo "ECS cluster already managed"
        working-directory: terraform

      - name: Import existing ECS Service
        run: |
          terraform import aws_ecs_service.strapi strapi-cluster/strapi-service || echo "ECS service already managed"
        working-directory: terraform

      - name: Terraform Plan
        run: terraform plan
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform
