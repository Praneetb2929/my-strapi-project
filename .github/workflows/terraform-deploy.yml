name: Deploy with Terraform

on:
  workflow_run:
    workflows: ["Build and Push to ECR"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    env:
      TF_VAR_image_tag: ${{ github.sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init
        working-directory: terraform

      - name: Import ALB
        run: terraform import aws_lb.strapi arn:aws:elasticloadbalancing:us-east-1:607700977843:loadbalancer/app/strapi-alb/653ce13d206cc605
        working-directory: terraform
        continue-on-error: true

      - name: Import Blue Target Group
        run: terraform import aws_lb_target_group.blue arn:aws:elasticloadbalancing:us-east-1:607700977843:targetgroup/strapi-blue/84a64c84e2c91971
        working-directory: terraform
        continue-on-error: true

      - name: Import Green Target Group
        run: terraform import aws_lb_target_group.green arn:aws:elasticloadbalancing:us-east-1:607700977843:targetgroup/strapi-green/c6f16a5ad8008a4f
        working-directory: terraform
        continue-on-error: true

      - name: Import ALB Listener
        run: terraform import aws_lb_listener.http arn:aws:elasticloadbalancing:us-east-1:607700977843:listener/app/strapi-alb/653ce13d206cc605/a4ca562d1d60c43a
        working-directory: terraform
        continue-on-error: true

      - name: Import ECS Cluster
        run: terraform import aws_ecs_cluster.strapi strapi-cluster
        working-directory: terraform
        continue-on-error: true

      - name: Import ALB Security Group
        run: terraform import aws_security_group.alb_sg sg-02572b17993127d6c
        working-directory: terraform
        continue-on-error: true

      - name: Import CodeDeploy App
        run: terraform import aws_codedeploy_app.strapi StrapiApp
        working-directory: terraform
        continue-on-error: true

      - name: Import IAM Role - ecsTaskExecutionRole
        run: terraform import aws_iam_role.ecs_task_execution ecsTaskExecutionRole
        working-directory: terraform
        continue-on-error: true

      - name: Import IAM Role - CodeDeployServiceRole
        run: terraform import aws_iam_role.codedeploy CodeDeployServiceRole
        working-directory: terraform
        continue-on-error: true

        
      - name: Terraform Plan
        run: terraform plan -var="image_tag=${{ env.TF_VAR_image_tag }}"
        working-directory: terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="image_tag=${{ env.TF_VAR_image_tag }}"
        working-directory: terraform

